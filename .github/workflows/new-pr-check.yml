name: Pr-check-comment

on: 
  issue_comment:

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR $NUMBER
        env:
          NUMBER: ${{ github.event.issue.number }}

      - name : Print Title of PR
        env:
          TITLE: ${{ github.event.issue.title }}
        run: echo The Title of your PR is $TITLE
      
      - name: Get Branch name
        id: branchName
        run: |
          echo ::set-output name=branch::$(echo $PR_COMMENT | cut -d "[" -f2 | cut -d "]" -f1)
        env:
          PR_COMMENT: ${{ github.event.comment.body }}

      - name: Get comment
        id: comment-message
        run: |
          echo A comment on PR $PR_COMMENT
        env:
          PR_COMMENT: ${{ github.event.comment.body }}

      - name: comment
        run: |
          vny=test
          PR_COMMENT=${{ github.event.comment.body }}
          echo "PR_COMMENT=$PR_COMMENT" >> $GITHUB_ENV
          echo "vny=$vny">> $GITHUB_ENV
          echo "-------------------------"
          curl -X POST https://automation.atlassian.com/pro/hooks/7e0c8982c6766ee66128b036964ae062592d1a69 \
          -H 'Content-type: application/json' \
          --data '{"issues":["${{ github.event.issue.title }}"], "data": {"releaseVersion":$PR_COMMENT}}'
          echo "-------------------------"
          echo $PR_COMMENT
          echo $vny
        env:
          PR_COMMENT: ${{ github.event.comment.body }}

      # - name: make comment
      #   uses: dkershner6/post-api-call-action@v1
      #   with:
      #     url: https://automation.atlassian.com/pro/hooks/7e0c8982c6766ee66128b036964ae062592d1a69
      #     data: '{"issues":["${{ github.event.issue.title }}"], "data": {"releaseVersion": "'"$PR_COMMENT"'"} }'
      #     #data: '{"issues":["${{ github.event.issue.title }}"], "data": {"releaseVersion":"${{ github.event.comment.body }}"}}'
      #     #headers: "{\"Authorization\": \"Bearer ${{ secrets.API_KEY }}\"}"
      #     params: "{\"content\": \"Test Content\"}"

  # issue_commented:
  #   # This job only runs for issue comments
  #   name: Issue comment
  #   if: ${{ !github.event.issue.pull_request }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo A comment on issue $NUMBER
  #       env:
  #         NUMBER: ${{ github.event.issue.number }}

# name: Pr-check-pull

# on:
#   pull_request:
#     types: [opened, synchronize]

# jobs:
#   print_title_of_pr:
#     runs-on: ubuntu-20.04
#     steps:
#     - name : Print Title of PR
#       env:
#           TITLE: ${{ github.event.pull_request.title }}
#       run: echo The Title of your PR is $TITLE
  
#   approved:
#     if: github.event.review.state == 'approved'
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "This PR was approved"