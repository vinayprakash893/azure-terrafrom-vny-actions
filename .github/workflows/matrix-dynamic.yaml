name: matrix-dynamic
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      paths:
        description: provide all OS in stringified array format
        required: true
        default: "'ubuntu-latest','windows-latest'"
      NODE_VERSION:
        description: provide all node versions in stringified array format
        required: true
        default: "'10','16'"
jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.set-matrix.outputs.os }}
      nodeVersion: ${{ steps.set-matrix.outputs.nodeVersion }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - id: set-matrix
        run: |
          echo "::set-output name=os::${{format('[{0}]',github.event.inputs.OS)}}"
          echo "::set-output name=nodeVersion::${{format('[{0}]',github.event.inputs.NODE_VERSION)}}"
      
      - uses: Stockopedia/action-get-changed-files@v1
        id: get_changed
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ignore: "**/*.js" # glob
          foldersOnly: true # to only include folders in the output
          format: json # either json, csv or newline

      - name: Echo
        run: echo ${{ steps.get_changed.outputs.changed }}


  build:
    needs: prebuild
    runs-on: ubuntu-latest
    name: "${{ matrix.OS }} ${{ matrix.NODE_VERSION }}"
    strategy:
      fail-fast: false
      matrix:
        OS: ${{fromJSON(needs.prebuild.outputs.os)}}
        NODE_VERSION: ${{fromJSON(needs.prebuild.outputs.nodeVersion)}}
    steps:
      - name: running
        run: echo "running job with ${{ matrix.OS }} ${{ matrix.NODE_VERSION }}"