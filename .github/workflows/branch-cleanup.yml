# name: cleanup-old-branches

# on:
#   # Run daily at midnight
#   schedule:
#     - cron: "0 0 * * *"

#   # Allow workflow to be manually run from the GitHub UI
#   workflow_dispatch:

# jobs:
#   cleanup_old_branches:
#     runs-on: ubuntu-latest
#     name: Cleanup my repo old branches
#     steps:
#       - name: Delete those dead branches
#         uses: drew-dectech/github-action-inactive-branches@main
#         id: delete_stuff
#         with:
#           github_token: ${{ secrets.REPO_SCOPED_TOKEN }}
#           last_commit_age_days: 60
#           ignore_branches: next-version,dont-deleteme,main,master
#           ignore_suffix: _dont_delete
#           #github_base_url: https://github.mycompany.com/api/v3 
#           #The github API's base url. You only need to override this when using Github Enterprise on a different domain. Default: https://api.github.com
#           prefixes_to_delete: release/,BW-

#           # Disable dry run and actually get stuff deleted
#           dry_run: yes

#       - name: Get output
#         run: "echo 'Deleted branches: ${{ steps.delete_stuff.outputs.deleted_branches }}'"

name: cleanup-old-branches-manual
on:
  workflow_dispatch:
jobs:
  cleanup_old_branches:
    runs-on: ubuntu-latest
    name: Cleanup my repo old branches
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_SCOPED_TOKEN }}

      - name: Git Setup
        run: |
          git config --global user.email "Workflow@githubactions.com"
          git config --global user.name "Github actions"

      - name: List branches
        run: |
          git fetch --prune
          git branch -r --merged | grep -v '/main$' | sed 's/origin\///' > merged_branches.txt
                    
      - name: Delete old branches
        run: |
          while read -r branch; do
            if [ -z "$branch" ]; then
              continue
            fi
            last_commit_date=$(git log -1 --format="%ct" "origin/$branch")
            current_date=$(date +%s)
            days_old=$(( (current_date - last_commit_date) / (60 * 60 * 24) ))
            if [ "$days_old" -gt 60 ]; then
              git push --delete origin "$branch"
              deleted_branches="$deleted_branches$branch, "
            fi
          done < merged_branches.txt
          echo "Deleted branches: $deleted_branches"