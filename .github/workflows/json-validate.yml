name: json-validate

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v1

      - name: JSON to variables
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: 'json/input.json'
          prefix: 'jsonvalue'
      
      # - name: JSON to variables
      #   uses: antifree/json-to-variables@v1.0.1
      #   with:
      #     filename: 'app1/input-data2.json'
      #     prefix: 'jsonvalue_old'

      - name: Show output
        run: echo "The time was ${{ env.jsonvalue_version }}"

      - name: Set Version Environment Variable
        run: |
          export VERSION=$(jq -r '.version' json/input.json)
          echo "Version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Show output
        run: echo "The time was $VERSION"
      - name: Show env
        run: env

      # - name: Validate JSON
      #   uses: docker://orrosenblatt/validate-json-action:latest
      #   env:
      #     INPUT_SCHEMA: /json/schema.json
      #     INPUT_JSONS: /json/input.json
      # - name: Check my YAML/JSON file with my JSON schema
      #   id: validation
      #   uses: lyubick/action-YAML-schema-validator@v2
      #   with:
      #     json-schema-file: path/to/my/cool/schema.json
      #     yaml-json-file-dir: path/to/my/cool/yaml/file.yaml,path/to/my/cool/yaml/another/file.yaml
      #     recursive: false
      #     ignore-empty: false
        
      - name: Check my YAML/JSON file with my JSON schema
        id: validation
        uses: vinayprakash893/azure-terrafrom-vny-actions/actions/json-YAML-schema-validator@main
        with:
          json-schema-file: json/schema.json
          yaml-json-file-dir: json/input.json
          recursive: false
          