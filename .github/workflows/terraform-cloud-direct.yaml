name: terraform-cloud-direct

#on: push
on:
  push:
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Framework version'
        required: true
        default: '2.5.3'

jobs:
  job1:
    name: Validate
    # if: github.event_name == 'pull_request' || github.event.ref == 'refs/heads/main'
    env:
      ARTIFACT_NAME: "arti-11"
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      
      - name: all variables
        run:  env  

      - name: Setup path
        shell: bash
        run: |
          ls -la
          pwd
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ inputs.cli_token}}

      - name: Setup terrafromrc
        id: initialization
        shell: bash
        run: |
          echo 'credentials "app.terraform.io" { token = "${{ secrets.TF_API_TOKEN }}" }' > ${{ runner.workspace }}/.terraformrc
          cat ${{ runner.workspace }}/.terraformrc

      - name: Initialize Terraform
        id: init
        shell: bash
        run: terraform init 
        working-directory: ${{ inputs.working-directory}}
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}

      - name: list path
        shell: bash
        run: |
          ls -la
          pwd