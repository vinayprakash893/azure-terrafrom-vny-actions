name: Matrix-one-pipeline-for-allfolder

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main]

  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write
  

jobs:
  determine-directory:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app_dir: [app1, app2]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
          clean: true
      # - name: Determine changed directory
      #   id: set_terraform_directory
      #   run: |
      #     # changed_files=$(git diff --name-only "${{ github.event.before || 'origin/main' }}" "${{ github.sha }}")
      #     # echo "compared files"
      #     # for folder in $(echo "$changed_files" | grep -Eo '^[^/]+/' | sort -u); do
      #     #   echo "Detected changes in folder: $folder"
      #     #   echo "::set-output name=terraform_directory::$folder"
      #     #   exit 0
      #     # done
          
      #     # echo "No changes in directories. Exiting..."
      #     # exit 1

      #     # echo "app1"
      #     # terraform_directory="app1"
      #     # echo "terraform_directory=$terraform_directory" >> $GITHUB_OUTPUT
      - run: |
          matrix=$((
            echo '${{ toJSON(matrix) }}'
          ) | jq -c .)
          echo "$matrix" > matrix
          echo "::set-output name=matrix::$matrix"
        id: matrix
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ hashFiles('matrix') || 'none' }}
          path: matrix
          if-no-files-found: warn
    outputs:
      id: terraform_directory
      terraform_directory: ${{ steps.set_terraform_directory.outputs.terraform_directory }}

  check-matrix:
    runs-on:  ubuntu-22.04
    needs: [ determine-directory ]
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          cat */matrix
          matrix="$(cat */matrix | jq -c --slurp .)"
          echo "::set-output name=matrix::$matrix"
        id: check-matrix
    outputs:
      matrix: ${{ steps.check-matrix.outputs.matrix }}

  build:
    name: "Build ${{ matrix.includes.app_dir }}"
    needs: [ check-matrix ]
    strategy:
      fail-fast: false
      matrix:
        includes: ${{ fromJSON(needs.check-matrix.outputs.matrix) }}
    uses: vinayprakash893/azure-terraform-actions-reusable/.github/workflows/build.yaml@main
    with:
      environment: dev
      terraform_directory: "${{ matrix.includes.app_dir }}"
      artifact-name: 'art-vny-1'
      jira-key: ISM1-10
    secrets: inherit