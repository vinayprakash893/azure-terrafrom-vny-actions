name: tf-cloud-vars

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:  
      # - name: Terraform API Integration Delete Variable
      #   uses: Mona-bele/action-integration-terraform@main
      #   with:
      #     tf_api_token: ${{ secrets.TF_API_TOKEN }}
      #     tf_workspace: 'cloud_user_p_99650270'
      #     tf_organization: 'Cloudtech'
      #     tf_run_type: 'variable_delete'
      #     tf_variable_key: 'test'

      # - name: Terraform API Integration Create Variable
      #   uses: Mona-bele/action-integration-terraform@main
      #   with:
      #     tf_api_token: ${{ secrets.TF_API_TOKEN }}
      #     tf_workspace: 'cloud_user_p_99650270'
      #     tf_organization: 'Cloudtech'
      #     tf_run_type: 'variable_create'
      #     tf_variable_key: 'test'
      #     tf_variable_value: 'test123'
      #     tf_variable_category: 'terraform'
      #     tf_variable_sensitive: 'false'
      #     tf_variable_hcl: 'false'
      #     tf_variable_description: 'test'

# backup actions if above are not working

      # - name: Create Variables if not found
      #   uses: cbsinteractive/create-tfc-workspace-variable-action@v1
      #   with:
      #       tfcToken: ${{ secrets.TF_API_TOKEN }}
      #       orgName: 'Cloudtech'
      #       workspaceName: 'cloud_user_p_99650270'
      #       variableName: newkey1
      #       category: terraform
      #       sensitive: false
      #       value: '12345'
      # if key is exist it will fail and tell "Key has already been taken "

      # - name: Updating the variables
      #   uses: cbsinteractive/update-tfc-workspace-variable-value-action@v1
      #   with:
      #       tfcToken: ${{ secrets.TF_API_TOKEN }}
      #       orgName: 'Cloudtech'
      #       workspaceName: 'cloud_user_p_99650270'
      #       variableName: newkey1
      #       value: "acutalvalue1"

# approach 3

      - name: setup workspace Variables
        id: workspace
        uses: vinayprakash893/terraform-github-workspace-setup-action@master
        with:
          organization: 'Cloudtech'
          workspace: 'cloud_user_p_99650270'
          token: ${{ secrets.TF_API_TOKEN }}
          vars: '
            {
              "key": "ARM_CLIENT_ID",
              "value": "${{ secrets.AZURE_CLIENT_ID }}",
              "sensitive": "false"
            },
            {
              "key": "ARM_CLIENT_SECRET",
              "value": "${{ secrets.ARM_CLIENT_SECRET }}",
              "sensitive": "true"
            },
            {
              "key": "ARM_SUBSCRIPTION_ID",
              "value": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "sensitive": "false"
            },
            {
              "key": "ARM_TENANT_ID",
              "value": "${{ secrets.AZURE_TENANT_ID }}",
              "sensitive": "false"
            }
            '
          
      - name: Get the output time
        run: echo "The workspace ID is ${{ steps.workspace.outputs.workspace_id }}"